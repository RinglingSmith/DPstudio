// The generated canvas.js file by Emscripten will include necessary imports,
// runtime, and your exposed C++ methods.

// Module will be available to interact with from your HTML/JS code.
// You will use the `Module` object to access the Canvas class and its methods.

// This part is auto-generated by Emscripten and usually looks like this:
var Module = {
  // The runtime initialization happens here
  onRuntimeInitialized: function() {
    // Emscripten runtime is now ready and you can interact with the C++ code
    console.log("Emscripten runtime initialized.");
  }
};

// Expose C++ functions to JavaScript
Module.Canvas = Module.cwrap('Canvas', 'number', ['number', 'number']); // Wrap the constructor
Module.createLayer = Module.cwrap('createLayer', null, ['number']); // Wrap the createLayer method
Module.drawOnLayer = Module.cwrap('drawOnLayer', null, ['number', 'number', 'number', 'number']); // Wrap the drawOnLayer method
Module.printCanvas = Module.cwrap('printCanvas', null, []); // Wrap the printCanvas method

// You can now call these functions like normal JavaScript functions:
// Example:
// let canvas = new Module.Canvas(800, 600); // Create a canvas instance
// canvas.createLayer(400, 300); // Create a new layer
// canvas.drawOnLayer(0, 10, 10, 255); // Draw a pixel on the first layer
// canvas.printCanvas(); // Output the state of the canvas
